plugins {
	id 'textile-loom' version '0.5.1+build12'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://jitpack.io' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft name: "rd-132211", version: "rd-132211"
	mappings files("yarn-rd-132211+build21d023-v2.jar")
	modImplementation "com.github.Cursed-Ancient-Fabric:preclassic-loader:b6f179763d"

	// Some dependencies aren't gotten by the loader, so we add them ourselves
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
	implementation 'com.google.guava:guava:28.0-jre'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	implementation 'org.ow2.asm:asm:9.0'
	implementation 'org.ow2.asm:asm-analysis:9.0'
	implementation 'org.ow2.asm:asm-commons:9.0'
	implementation 'org.ow2.asm:asm-tree:9.0'
	implementation 'org.ow2.asm:asm-util:9.0'
	annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
	annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
}

minecraft {
	intermediaryUrl = {
		return "https://github.com/Cursed-Ancient-Fabric/preclassic-intermediary/blob/intermediary/intermediary-rd-132211-intermediary-v2.jar?raw=true"
	}
	customManifest = "https://launchermeta.mojang.com/v1/packages/8b6e0c4f183ffb61b6a0c818787b0499b315123e/rd-132211.json"
	clientOnly = true
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}
